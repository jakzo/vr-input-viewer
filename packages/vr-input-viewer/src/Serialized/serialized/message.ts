// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { ControllerConnect } from '../serialized/controller-connect.js';
import { ControllerDisconnect } from '../serialized/controller-disconnect.js';
import { HeadsetConnect } from '../serialized/headset-connect.js';
import { HeadsetDisconnect } from '../serialized/headset-disconnect.js';
import { InputUpdate } from '../serialized/input-update.js';


export class Message {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Message {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsMessage(bb:flatbuffers.ByteBuffer, obj?:Message):Message {
  return (obj || new Message()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsMessage(bb:flatbuffers.ByteBuffer, obj?:Message):Message {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Message()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

headsetConnect(obj?:HeadsetConnect):HeadsetConnect|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new HeadsetConnect()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

headsetDisconnect(obj?:HeadsetDisconnect):HeadsetDisconnect|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new HeadsetDisconnect()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

controllerConnect(obj?:ControllerConnect):ControllerConnect|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new ControllerConnect()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

controllerDisconnect(obj?:ControllerDisconnect):ControllerDisconnect|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new ControllerDisconnect()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

inputUpdate(obj?:InputUpdate):InputUpdate|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new InputUpdate()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startMessage(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addHeadsetConnect(builder:flatbuffers.Builder, headsetConnectOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, headsetConnectOffset, 0);
}

static addHeadsetDisconnect(builder:flatbuffers.Builder, headsetDisconnectOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, headsetDisconnectOffset, 0);
}

static addControllerConnect(builder:flatbuffers.Builder, controllerConnectOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, controllerConnectOffset, 0);
}

static addControllerDisconnect(builder:flatbuffers.Builder, controllerDisconnectOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, controllerDisconnectOffset, 0);
}

static addInputUpdate(builder:flatbuffers.Builder, inputUpdateOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, inputUpdateOffset, 0);
}

static endMessage(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishMessageBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedMessageBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

}
